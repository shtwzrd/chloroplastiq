/*******************************************************
 * Brandon Lucas
 * 30 December 2011
 * Chloroplastiq (Mono-port)
*******************************************************/

using System;
using System.IO;
using Chloroplastiq.Lindenmayer.Grammar;

namespace Chloroplastiq.Lindenmayer.TurtleGraphics
{
    public class LInterpreter
    {
        public LInterpreter(Turtle t, Product p, float r)
        {
            Turtle = t;
            LSystem = p;
            Rotation = r;
            Iterations = LSystem.Iterations;
        }

        public string GetGrammar()
        {
            if (Iterations > 0)
                return LSystem.Yield(LSystem.Axiom, Iterations, LSystem.Rules);
            else
                return "";
        }

        //Interpreter method, responsible for reading the Grammar generated by the Product class.
        public void Render()
        {
            int sentinel;
            char character;
            StringReader reader = new StringReader(GetGrammar());
            while (true)
            {
                sentinel = reader.Read();
                if (sentinel == -1) break;
                character = Convert.ToChar(sentinel);
                switch (character)
                {
                    case '|':
                        Turtle.Forward();
                        break;

                    case '+':
                        Turtle.Rotate(-Rotation);
                        break;

                    case '-':
                        Turtle.Rotate(Rotation);
                        break;

                    case '[':
                        Turtle.Push(new Orientation(Turtle.Position, Turtle.Direction));
                        break;

                    case ']':
                        Turtle.Pop();
                        break;

                    case 'F':
                        Turtle.Forward();
                        break;

                    default:
                        break;
                }
            }
        }

        //This function exists for the purpose of reading and redrawing information written into the Paths textbox.
        public void Render(string p)
        {
            int sentinel;
            char character;
            StringReader reader = new StringReader(GetGrammar());
            while (true)
            {
                sentinel = reader.Read();
                if (sentinel == -1) break;
                character = Convert.ToChar(sentinel);
                switch (character)
                {
                    case '|':
                        Turtle.Forward();
                        break;

                    case '+':
                        Turtle.Rotate(Rotation);
                        break;

                    case '-':
                        Turtle.Rotate(-Rotation);
                        break;

                    case '[':
                        Turtle.Push(new Orientation(Turtle.Position, Turtle.Direction));
                        break;

                    case ']':
                        Turtle.Pop();
                        break;

                    case 'F':
                        Turtle.Forward();
                        break;

                    default:
                        break;
                }
            }
        }

        public float Rotation { get; set; }
        public int Iterations { get; set; }
        public Turtle Turtle;
        public Product LSystem;
    }
}